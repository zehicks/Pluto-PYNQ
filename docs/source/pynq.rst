PYNQ
====

PYNQ is an open-source framework for accelerating hardware/software co-design on Zynq SoCs [7].  The PYNQ framework provides an embedded Linux environment and the ability to interact with the Zynq FPGA fabric directly from Python or from a Jupyter Notebook.  First, an FPGA bitstream called an “overlay” is loaded, which instantiates the FPGA IP and sets up the required DMA or memory-mapped interfaces between the PS and PL.  Once the PL overlay is loaded, the user interacts with the PL functionality using Python function calls.  The transparency of the FPGA accelerator from the perspective of the software engineer provides a number of advantages to hardware/software co-design, including the ability to develop software and hardware in parallel.

The PYNQ framework has first-party support from AMD/Xilinx for a number of existing development boards, including the RFSoC 2x2 and 4x2 kits [8].  The textbook “SDR with RFSoC” published by AMD and the University of Strathclyde uses the RFSoC-PYNQ framework to enable software control of the embedded RF converters and provides Jupyter Notebooks as examples and exercises to the reader [9].  This textbook and the provided examples demonstrate the utility of the PYNQ framework for learning RF signal processing, but the cost of the RFSoC 4x2 development board ($2,149) can be too expensive for hobbyist or educational use.  Another example project that uses the PYNQ framework for RF signal processing is PynqRadio, an open-source project that combines the Pynq-Z1 development board with an RTL-SDR dongle to create a PYNQ broadcast FM radio receiver [10].  This solution would allow a student to process RF samples using an FPGA, but the RTL-SDR dongle is receive-only, so loopback testing is not possible.  Along with being less capable, the Pynq-Z1 board and RTL-SDR are also more expensive than the PlutoSDR, with a combined cost of $330.
